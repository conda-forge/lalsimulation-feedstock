{% set name = "lalsimulation" %}
{% set version = "2.2.1" %}
{% set sha256 = "043518d24e2fa5ad18869fa5f9d1a6bd9a9b60cfedf92b5e3f871242768eebe9" %}

# dependencies
{% set lal_version = "6.22.0" %}
{% set swig_version = "3.0.9" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: http://software.ligo.org/lscsoft/source/lalsuite/{{ name }}-{{ version }}.tar.xz
  sha256: {{ sha256 }}

build:
  error_overdepending: true
  error_overlinking: true
  number: 0
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - help2man
    - llvm-openmp  # [osx]
    - make
    - pkg-config >=0.18.0
    - swig >={{ swig_version }}
  host:
    - gsl
    - lal >={{ lal_version }}
    - libgomp  # [linux]
    - llvm-openmp  # [osx]
  run:
    - gsl
    - lal >={{ lal_version }}
    - llvm-openmp  # [osx]

test:
  requires:
    - pkg-config  # [unix]
  commands:
    - test ${LALSIMULATION_DATADIR} == "${PREFIX}/share/lalsimulation"  # [unix]
    - lalsimulation_version --verbose
    - lalsim-bh-qnmode -l 0 -m 0 -s 0
    - lalsim-bh-ringdown -M 10 -a 0 -r 100 -e 0.001 -i 0 -l 2 -m 2
    - lalsim-bh-sphwf -a 0 -l 2 -m 2 -s 0
    - lalsim-burst -w SineGaussian -q 10 -f 100 -H 1e-21 1> /dev/null
    - lalsim-detector-noise -C -t 1 -r 10
    - lalsim-detector-strain --help
    - lalsim-inject --help
    - lalsim-inspiral --sample-rate 10 > /dev/null
    - lalsim-ns-eos-table -n ALF1 1> /dev/null
    - lalsim-ns-mass-radius -n ALF1 1> /dev/null
    - lalsim-ns-params -n ALF1
    - lalsim-sgwb --geo -t 1 -r 100 -W 1 1> /dev/null
    - lalsim-unicorn --help
    - test "$(pkg-config --modversion ${PKG_NAME})" == "${PKG_VERSION}"  # [unix]

outputs:
  - name: lalsimulation
    build:
      run_exports:
        - {{ pin_subpackage("lalsimulation", max_pin="x") }}

  - name: python-lalsimulation
    script: install-python.sh
    build:
      error_overdepending: true
      error_overlinking: true
      ignore_run_exports:
        - python
    requirements:
      build:
        - {{ compiler('c') }}
        - make
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
      host:
        - {{ pin_subpackage('lalsimulation', exact=True) }}
        - numpy
        - python
      run:
        - gsl  # [linux]
        - lal >={{ lal_version }}
        - {{ pin_subpackage('lalsimulation', exact=True) }}
        - {{ pin_compatible('numpy') }}
        - python
        - python-lal >={{ lal_version }}
    test:
      imports:
        - lalsimulation
      requires:
        - mock  # [py<33]
        - pathlib  # [py<34]
        - pytest >=4.0.0a0
      source_files:
        - test/python
      commands:
        - pushd test/python; python -m pytest -rs -v; popd
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lalsimulation/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Simulation Library
      description: |
        The LSC Algorithm Simulation Library for gravitational wave data
        analysis.
        This package contains the python bindings.

about:
  home: https://wiki.ligo.org/Computing/LALSuite
  doc_url: https://docs.ligo.org/lscsoft/lalsuite/lalsimulation/
  dev_url: https://git.ligo.org/lscsoft/lalsuite/
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: COPYING
  summary: LSC Algorithm Simulation Library
  description: |
    The LSC Algorithm Simulation Library for gravitational wave data
    analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL Simulation library. If you want to
    install the Python bindings, please install the associated
    python-lalsimulation package.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
